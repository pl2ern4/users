{"version":3,"sources":["action.js","api.js","App.js","AboutUser.js","reportWebVitals.js","Reducer.js","index.js"],"names":["fetch_user","dispatch","fetch","then","res","json","catch","error","receive_user","receive_error","post","type","data","App","userData","useSelector","state","shallowEqual","useDispatch","useEffect","className","style","width","map","obj","key","onClick","params","id","window","sessionStorage","setItem","JSON","stringify","location","href","name","email","phone","address","street","city","company","AboutUser","match","parse","getItem","dataFromState","removeItem","website","suite","to","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isFetching","isError","asyncReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.abe38aa8.chunk.js","sourcesContent":["\nimport { getUser } from \"./api\";\n\nexport const fetch_user = () => {\n    return dispatch=>{\n        getUser()\n        .then(res=>{\n            dispatch(receive_user(res));\n        })\n        .catch(error=>{\n            dispatch(receive_error(error));\n        })\n    }\n  \n};\n\nexport const receive_user = post => {\n  return {\n    type: \"FETCHED_USER\",\n    data: post\n  };\n};\n\nexport const receive_error = () => {\n  return {\n    type: \"RECEIVE_ERROR\"\n  };\n};\n\n// export const thunk_action_creator = username => {\n//     const user = username.replace(/\\s/g, \"\");\n//     store.dispatch(fetch_post());\n//     return function(dispatch, getState) {\n//       return fetch(`https://api.github.com/users/${user}`)\n//         .then(data => data.json())\n//         .then(data => {\n//           if (data.message === \"Not Found\") {\n//             throw new Error(\"No such user found!!\");\n//           } else dispatch(receive_post(data));\n//         })\n//         .catch(err => dispatch(receive_error()));\n//     };\n//   };","export const getUser = () =>{\n    return fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res=>res.json())\n    .catch(error=>{\n        throw error;\n    })\n    .then(res=>res)\n    .catch(error=>{\n        throw error;\n    });\n}","import { shallowEqual, useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetch_user } from './action'\n\nfunction App() {\n  const userData = useSelector(state => state.userData, shallowEqual);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetch_user()), [])\n  const handleClick = params =>{\n    window.sessionStorage.setItem(\"data\",JSON.stringify(userData[params]));\n    window.location.href = `/page2/id=${params}`;\n  }\n  return (\n    <div className=\"App\">\n      <table style={{width:\"100%\"}}>\n        <thead>\n          <tr>\n          <th>\n              Id\n            </th>\n            <th>\n              Name\n            </th>\n            <th>\n              Email\n            </th>\n            <th>\n              Phone\n            </th>\n            <th>\n              Street\n            </th>\n            <th>\n              City\n            </th>\n            <th>\n              Company Name\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {userData && userData.map((obj, key) => (\n            <tr key={key} onClick={()=>handleClick(obj.id)}>\n              <td>{obj.id}</td>\n              <td>{obj.name}</td>\n              <td>{obj.email}</td>\n              <td>{obj.phone}</td>\n              <td>{obj.address.street}</td>\n              <td>{obj.address.city}</td>       \n              <td>{obj.company && obj.company.name}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst AboutUser = ({match:{params:{id}}}) =>{\n    const data = JSON.parse(window.sessionStorage.getItem(\"data\"));\n\n    const dataFromState = useSelector(state => state.userData[id], shallowEqual);\n    const userData = data || dataFromState;\n    useEffect(()=>{\n        return ()=>window.sessionStorage.removeItem(\"data\")\n    },[]);\n\n    if(!userData){\n    return <div style={{margin:\"0 auto\", width:\"100%\"}}>Data Not Found</div>;\n    }\n    return (<div>\n        <p>Name: { userData.name }</p>\n        <p>Email:{ userData.email }</p>\n        <p>Phone: {userData.phone}</p>\n        <p>Website: {userData.website}</p>\n        <p>Company: {userData.company && userData.company.name}</p>\n        <p>Address: {`${userData.address.suite} \\n ${userData.address.street}\\n ${userData.address.city}`}</p>\n        <p><Link to=\"/\"> Home </Link></p>\n    </div>)\n}\nexport default AboutUser;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst initialState = {\n    userData: [],\n    isFetching: false,\n    isError: false\n  };\n  \n  const asyncReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"FETCH_USER\":\n           return {...state, isFetching:true, isError: false, userData:[]}\n        case \"FETCHED_USER\":\n          return {...state, isFetching:false, isError: false, userData: action.data}\n        case \"RECEIVE_ERROR\":\n            return {...state, isFetching:false, isError: true, userData: []}\n        default:\n          return state;\n      }\n  };\n\nexport default asyncReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AboutUser from './AboutUser';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport asyncReducer from \"./Reducer\"; \nimport thunk from \"redux-thunk\";\n\nimport { BrowserRouter as Router,  Switch, Route } from 'react-router-dom';\n\nconst store = createStore(asyncReducer, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n   <Router >\n      \n     <Switch>\n     <Route path = \"/page2\" component = {AboutUser} />\n      <Route path = \"/\" component = {App}/>\n     </Switch>\n   </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}